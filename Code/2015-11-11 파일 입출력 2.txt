#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <ctype.h>

/*
13.키보드로 부터 5개의 정수를 입력 받아 정수형 배열 in에 저장 한 후 
배열의 모든 내용을 명령행 라인 매개변수에서 지정한 화일에 저장하시오. 
· fwrite() 사용.
· 프로그램 수행 예 C:> exprog savefile
*/

void ex13(int argc, char *argv[])
{
	int in[5];
	int i;
	FILE *f;


	if(argc !=2)
	{
		printf("올바르지 않은 프로그램 형식입니다.");
		exit(0);
	}

	if((f = fopen(argv[1], "wb")) == NULL)
	{
		printf("파일이 열리지 않습니다.");
		exit(0);
	}
	
	for(i=0; i<5; i++)
	{
	printf("정수 입력(5개) : ");
	scanf("%d", &in[i]);
	}
	
	if(fwrite(in, sizeof(in), 1, f) != 1)
	{
		printf("\n파일을 쓰는데 에러가 있습니다.");
		exit(0);
	}
	fclose(f);
}

/*
14. 위 13번의 savefile을 읽어 들여 out 배열에 저장한 후 화면으로 읽어 들인 값을 화면에 출력하시오. 
· fread() 사용.
· 프로그램 수행 예 C:> exprog savefile
*/
void ex14(int argc, char *argv[])
{
	int out[5];
	FILE *f;
	int i;


	if(argc !=2)
	{
		printf("올바르지 않은 프로그램 형식입니다.");
		exit(0);
	}

	if((f = fopen(argv[1], "rb")) == NULL)
	{
		printf("파일이 열리지 않습니다.");
		exit(0);
	}

	fread(out, sizeof(out), 1, f);

	for(i=0; i<5; i++)
	{
		printf("out[%d] = %d\n", i, out[i]);
	}	
	getche();

	fclose(f);	
}


/*
15. 다음을 참고로 파일의 크기를 출력하는 프로그램을 작성하시오. 
· 프로그램 수행방법 C:> filesize  filename
· 함수 fseek()과 ftell()을 이용
*/
void ex15(int argc, char *argv[])
{
	FILE *f;
	long size;

	if(argc !=2)
	{
		printf("올바르지 않은 프로그램 형식입니다.");
		exit(0);
	}

	if((f = fopen(argv[1], "rb")) == NULL)
	{
		printf("파일이 열리지 않습니다.");
		exit(0);
	}
	
	fseek(f, 0L, SEEK_END);	//파일포인터 끝으로 이동
	printf("size : %d", ftell(f));
	getchar();
	
	fclose(f);
}
/*
16. 메인함수의 매개변수로 명령어 라인에서 입력 받은 파일명에 A부터 Z까지 출력하고
	파일의 사이즈를 출력하는 프로그램을 작성하시오.
· fwrite(&ch, 사이즈, 횟수, 파일포인터); 또는 ftell(fp); 사용
· 프로그램 수행방법 c:> ctest sample.data
*/

void ex16(int argc, char *argv[])
{
	
	FILE *f;
	char ch, in;
	int size;

	if((f = fopen(argv[1], "wb")) == NULL)
	{
		printf("파일이 열리지 않습니다.");
		exit(0);
	}
	
	for(ch = 'A'; ch<='Z'; ch++)
	{
		if(fwrite(&ch,1, 1, f) != 1)
		{
		printf("\n파일을 쓰는데 에러가 있습니다.");
		exit(0);
		}
	}

	fclose(f);

	if((f = fopen(argv[1], "rb")) == NULL)
	{
		printf("파일이 열리지 않습니다.");
		exit(0);
	}

	while(!feof(f))
	{	
		fread(&in, 1, 1, f);
		printf("%c", in);
	}
	fseek(f, 0L, SEEK_END);
	printf("\nsize : %d", ftell(f));
	getchar();
	
	fclose(f);
}

/*
17. 위 문제의 수행에서 쓰기모드, 출력 시작 문자와 마지막 문자도 메인함수의 매개변수로 
    명령어 라인에서 입력 받도록 프로그램을 수정하시오. 
· fwrite() 사용.
· 프로그램 수행방법 c:> ctest sample.data w A Z 
*/
void ex17(int argc, char *argv[])
{
	
	FILE *f;
	char ch, in;
	int size;

	if((f = fopen(argv[1], argv[2])) == NULL)
	{
		printf("파일이 열리지 않습니다.");
		exit(0);
	}
	
	for(ch = *argv[3]; ch<=*argv[4]; ch++)
	{

		if(fwrite(&ch,1, 1, f) != 1)
		{
		printf("\n파일을 쓰는데 에러가 있습니다.");
		exit(0);
		}
	}
	
	fclose(f);

	if((f = fopen(argv[1], "rb")) == NULL)
	{
		printf("파일이 열리지 않습니다.");
		exit(0);
	}

	while(!feof(f))
	{	
		fread(&in, 1, 1, f);
		printf("%c", in);
	}

	fseek(f, 0L, SEEK_END);
	printf("\nsize : %d", ftell(f));
	getchar();
	
	fclose(f);
}


/*
18. 위 문제에서 사용된 파일에서 전체파일의 크기를 알아낸 후 마지막에서 3번째 위치에 있는 값을 
	파일로부터 읽어 들여 프린트 하시오. 
· fseek(), ftell(), fread() 사용.
*/
void ex18(int argc, char *argv[])
{
	char ch;
	FILE *f;

	if((f = fopen(argv[1], "rb")) == NULL)
	{
		printf("파일이 열리지 않습니다.");
		exit(0);
	}

	fseek(f, 0L, SEEK_END);
	printf("\nsize : %d", ftell(f));

	fseek(f, -3L, SEEK_END);
	fread(&ch, 1,1, f);

	printf("\n%c", ch);
	getchar();

}


void main(int argc, char *argv[])
{
	//ex13(argc, argv);
	//ex14(argc, argv);
	//ex15(argc, argv);
	//ex16(argc, argv);
	//ex17(argc, argv);
	ex18(argc, argv);
}